# -*- coding: utf-8 -*-
"""class_7_python

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PvvUeIcyR51MUEAgjGN0lmFJHJ0-GWoN
"""

x=[1,2,3,[4,5,6,7]]
for i in x:
  print(i)

for i in ["data"]:
  print(i)

for i in range(0,10):
  print(i,end=',')

for i in range(0,10,2):
  print(i,end=',')

for i in range(10,0,-1):
  print(i,end=",")

for i in range(1,6):
  print(i*"$")

for i in range(5,0,-1):
  print(i*"*")

for i in range(0,5):
  if True:
    print("data")

for i in range(0,2):
  print("Data".upper())
  print("Data".lower())

for i in range(1,6):
  print(i*"*")
  if i==5:
    for j in range(5,0,-1):
      print(j*"*")

x=[1,2,3,4,5]
for i in range(1,6):
  print(x[0:i])

x="data adahfah abaipahpiaoihadobd dafkafhkahfka"
for i in range(1,len(x)):
  print(x[0:i])

for i in x:
  if not(i.isalpha()):
    print(i,end=",")

review=''' 1) I CAN TYPE AGAIN! I had switched to a turtle beach vulcan and there's a gap between the keys that I just cannot get used to. The feel, size of keys, near-silent typing, feel great. It's really nice to type on. It's heavy and feels well built. I was able to snag this (TKL Apex3) for $34. Amahhhzing value.

2) THE M1-M6 KEYS ARE NOT INDEPENDENT! You cannot bind them as meta keys as you can in the Apex7 keyboard. You will have to replace your insert key, or etc. I REPEAT: You CANNOT bind to the M1-M6 keys on the Apex3.

3) I hadn't noticed when purchasing that there is no dedicated print screen key. So as mentioned above, I changed my insert key to act as print screen as I have come to rely on the snipping tool quite frequently.

In summary, at 30-40$ this keyboard is a...Steel! Ha.'''

len(review)

type(review)

len(review.split())

space_counter=0
special_char_counter=0
numerical_char_count=0
for i in review:
  if i.isspace():
    space_counter=space_counter+1
  elif (i.isnumeric()):
    numerical_char_count=numerical_char_count+1
  elif not(i.isalpha()):
    special_char_counter=special_char_counter+1

print(space_counter)
print(special_char_counter)
print(numerical_char_count)